// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`common/Input container hidden label when withoutLabel is true 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="field1"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value="1"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input container should pass value of redux form for select 1`] = `
<div
  className="input showLabel type-select"
  style={Object {}}
>
  <select
    className="field"
    disabled={false}
    name="field1"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="select"
    value="1"
  >
    <option
      value="o1"
    >
      l1
    </option>
    <option
      value="o4"
    >
      l4
    </option>
    <option
      value="o2"
    >
      l2
    </option>
    <option
      value="o3"
    >
      l3
    </option>
  </select>
  <i
    className="arrow mdv-expand_more"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input container should pass value of redux form for selectbox 1`] = `
<div
  className="input showLabel type-selectbox"
  style={Object {}}
>
  <div
    className="kriya-select"
  >
    {"name":"kriya-select","props":{"value":"1","options":[{"value":"o1","label":"l1"},{"value":"o4","label":"l4"},{"value":"o2","label":"l2"},{"value":"o3","label":"l3"}],"className":"","name":"field1","placeholder":"","disabled":false,"anyTouched":false,"asyncValidating":false,"dirty":true,"form":"form1","initialized":false,"invalid":false,"pristine":false,"submitting":false,"submitFailed":false,"submitSucceeded":false,"valid":true,"pure":true,"array":{}}}
  </div>
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input container show label when withoutLabel is false 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <label
    htmlFor="field1"
  >
    label
  </label>
  <input
    className="field"
    disabled={false}
    name="field1"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value="1"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input container show placeholder on label when value is not empty 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <label
    htmlFor="field1"
  >
    placeholder
  </label>
  <input
    className="field"
    disabled={false}
    name="field1"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder="placeholder"
    type="text"
    value="1"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) error should print an error 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) labels should print a * on label when input is required 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <label
    htmlFor="name"
  >
    my label
    <div
      className="mandatory"
    >
      Â *
    </div>
  </label>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) labels should print a label 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <label
    htmlFor="name"
  >
    my label
  </label>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should add custom className 1`] = `
<div
  className="input showLabel type-text custom"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should add custom style 1`] = `
<div
  className="input showLabel type-text"
  style={
    Object {
      "backgroundColor": "red",
    }
  }
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should be disabled 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={true}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should have a default behaviour 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should print an icon when this is a select 1`] = `
<div
  className="input showLabel type-select"
  style={Object {}}
>
  <select
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="select"
    value=""
  />
  <i
    className="arrow mdv-expand_more"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) should print the placeholder 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder="My placeholder"
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print a select 1`] = `
<div
  className="input showLabel type-select"
  style={Object {}}
>
  <select
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="select"
    value=""
  />
  <i
    className="arrow mdv-expand_more"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print a selectbox 1`] = `
<div
  className="input showLabel type-selectbox"
  style={Object {}}
>
  <div
    className="kriya-select"
  >
    {"name":"kriya-select","props":{"options":[],"className":"","name":"name","placeholder":"","disabled":false,"anyTouched":false,"asyncValidating":false,"dirty":false,"form":"testForm","initialized":false,"invalid":false,"pristine":true,"submitting":false,"submitFailed":false,"submitSucceeded":false,"valid":true,"pure":true,"array":{}}}
  </div>
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print a textarea 1`] = `
<div
  className="input showLabel type-textarea"
  style={Object {}}
>
  <textarea
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="textarea"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print an input (checkbox) 1`] = `
<div
  className="input showLabel type-checkbox"
  style={Object {}}
>
  <div
    className="checkbox"
  >
    {"name":"checkbox","props":{"input":{"name":"name","value":"","checked":false},"meta":{"active":false,"asyncValidating":false,"autofilled":false,"dirty":false,"form":"testForm","invalid":false,"pristine":true,"submitting":false,"submitFailed":false,"touched":false,"valid":true,"visited":false},"className":"","placeholder":"","disabled":false,"type":"checkbox","children":null}}
  </div>
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print an input (number) 1`] = `
<div
  className="input showLabel type-number"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="number"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print an input (radio) 1`] = `
<div
  className="input showLabel type-radio"
  style={Object {}}
>
  <input
    checked={true}
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="radio"
    value={undefined}
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print options on select 1`] = `
<div
  className="input showLabel type-select"
  style={Object {}}
>
  <select
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="select"
    value=""
  >
    <option
      value="o1"
    >
      l1
    </option>
    <option
      value="o4"
    >
      l4
    </option>
    <option
      value="o2"
    >
      l2
    </option>
    <option
      value="o3"
    >
      l3
    </option>
  </select>
  <i
    className="arrow mdv-expand_more"
  />
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types should print options on selectbox 1`] = `
<div
  className="input showLabel type-selectbox"
  style={Object {}}
>
  <div
    className="kriya-select"
  >
    {"name":"kriya-select","props":{"options":[{"value":"o1","label":"l1"},{"value":"o4","label":"l4"},{"value":"o2","label":"l2"},{"value":"o3","label":"l3"}],"className":"","name":"name","placeholder":"","disabled":false,"anyTouched":false,"asyncValidating":false,"dirty":false,"form":"testForm","initialized":false,"invalid":false,"pristine":true,"submitting":false,"submitFailed":false,"submitSucceeded":false,"valid":true,"pure":true,"array":{}}}
  </div>
  <div
    className="errorMsg"
  />
</div>
`;

exports[`common/Input graphical (JSX) types shouldnt print options (not select) 1`] = `
<div
  className="input showLabel type-text"
  style={Object {}}
>
  <input
    className="field"
    disabled={false}
    name="name"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    onPaste={undefined}
    placeholder=""
    type="text"
    value=""
  />
  <div
    className="errorMsg"
  />
</div>
`;
